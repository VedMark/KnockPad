#ifndef PHRASE_H
#define PHRASE_H

#include <QByteArray>
#include <QFont>
#include <QFontMetrics>

class Phrase;
typedef Phrase* Phrases;

class Phrase
{
public:
    explicit Phrase();
    explicit Phrase(QByteArray *text, QFont font, qint64 beginID);
    ~Phrase();
    
    inline bool bold() const { return _font.bold(); }
    inline void setBold(bool bold) { _font.setBold(bold); }
    
    inline bool italic() const { return _font.italic(); }
    inline void setItalic(bool italic) { _font.setItalic(italic); }
    
    inline QFont font() const { return _font; }
    inline void setFont(QFont font) { _font = font; }
    
    inline qint64 size() const { return _text->size(); }
    
    inline qint64 height() const { return _height; }
    inline qint64 length() const { return _length; }
    
    inline qint64 beginID() const { return _beginID; }
    inline void setBeginID(qint64 ID) { _beginID = ID; }
    inline void changeID(qint64 shift) { _beginID += ID; }
    
    inline QByteArray* getText() const { return _text; }
    
    inline void push(QString str) { _text->append(str); }
    
    // Creates Phrase object with _text of this starting from pos to the end
    Phrase* pop(qint64 pos);
    
private:
    QByteArray *_text;
    QFont _font;
    
    qint64 _length;
    qint64 _height;
    
    qint64 _beginID;
};

#endif